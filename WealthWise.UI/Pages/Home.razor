@page "/"
@using WealthWise.Shared.Models

<PageTitle>WealthWise - AI Financial Advisor</PageTitle>

<div class="container mt-4">
    <h1>Welcome to WealthWise</h1>
    <p class="lead">Your AI-powered financial advisor</p>

    @if (_userProfile == null)
    {
        <div class="text-center">
            <button class="btn btn-primary" @onclick="() => _userProfile = new()">Get Started</button>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Your Profile</h5>
                        <EditForm Model="_userProfile" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label class="form-label">Name</label>
                                <InputText @bind-Value="_userProfile.Name" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Email</label>
                                <InputText @bind-Value="_userProfile.Email" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Age</label>
                                <InputNumber @bind-Value="_userProfile.Age" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Monthly Income</label>
                                <InputNumber @bind-Value="_userProfile.MonthlyIncome" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Monthly Savings</label>
                                <InputNumber @bind-Value="_userProfile.MonthlySavings" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Risk Tolerance</label>
                                <InputSelect @bind-Value="_userProfile.RiskToleranceLevel" class="form-control">
                                    @foreach (var risk in Enum.GetValues(typeof(RiskToleranceLevel)))
                                    {
                                        <option value="@risk">@risk</option>
                                    }
                                </InputSelect>
                            </div>

                            <button type="submit" class="btn btn-primary">Get AI Advice</button>
                        </EditForm>
                    </div>
                </div>
            </div>

            @if (_advice != null)
            {
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">AI Financial Advice</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@_advice.Category</h6>
                            <p class="card-text">@_advice.Description</p>

                            <h6>Action Items:</h6>
                            <ul class="list-group">
                                @foreach (var action in _advice.ActionItems)
                                {
                                    <li class="list-group-item">@action</li>
                                }
                            </ul>

                            @if (_advice.ProjectedImpact.HasValue)
                            {
                                <div class="mt-3">
                                    <strong>Projected Impact:</strong> $@_advice.ProjectedImpact.Value.ToString("N2")
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private UserProfile? _userProfile;
    private FinancialAdvice? _advice;
    private readonly HttpClient _httpClient = new();

    protected override void OnInitialized()
    {
        _httpClient.BaseAddress = new Uri("https://localhost:7008"); // API URL
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await _httpClient.PostAsJsonAsync("/api/financialadvice/generate", _userProfile);
            if (response.IsSuccessStatusCode)
            {
                _advice = await response.Content.ReadFromJsonAsync<FinancialAdvice>();
            }
        }
        catch (Exception ex)
        {
            // Handle error (in a real app, you'd want proper error handling)
            Console.WriteLine(ex);
        }
    }
}